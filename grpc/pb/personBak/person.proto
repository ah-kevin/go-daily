syntax = "proto3";

package person;

option go_package = "go-daily/grpc/pb/person;person";
import "home/home.proto";

message Person{
  string name = 1;
  int32 age = 2 ;
  //  bool sex = 3 ;
  enum sex{
    option allow_alias = true;
    MAN = 0;
    WOMAN = 1;
    GIRL = 1;
    OTHER = 2;
  }
  // 切片
  repeated string test = 4;
  map<string, string> test_map = 5;

  reserved  "test_reserved"; // 保留字
  oneof TestOneOf{
    string one = 6;
    string two = 7;
    string three = 8;
  }
  home.Home i_home = 9;
}

service SearchService{
  rpc Search(Person) returns (Person); // 传统的 即可响应
  rpc SearchIn(stream Person) returns (Person); // 入参为流
  rpc SearchOut(Person) returns (stream Person); // 出参为流
  rpc SearchIO(stream Person) returns (stream Person); // 出入均为流
}
